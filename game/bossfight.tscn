[gd_scene load_steps=17 format=2]

[ext_resource path="res://gmtk2020.png" type="Texture" id=1]
[ext_resource path="res://dragon.gd" type="Script" id=2]
[ext_resource path="res://fireball.tscn" type="PackedScene" id=3]
[ext_resource path="res://fire.tres" type="Animation" id=4]
[ext_resource path="res://idle.tres" type="Animation" id=5]
[ext_resource path="res://dragonsound.wav" type="AudioStream" id=6]
[ext_resource path="res://dragonmusic.wav" type="AudioStream" id=7]
[ext_resource path="res://bossfight.gd" type="Script" id=8]
[ext_resource path="res://bowl.wav" type="AudioStream" id=9]
[ext_resource path="res://eye.tscn" type="PackedScene" id=10]

[sub_resource type="ShaderMaterial" id=1]

[sub_resource type="AtlasTexture" id=2]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 0, 1500, 500, 500 )

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 500, 1500, 500, 500 )

[sub_resource type="SpriteFrames" id=4]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="Animation" id=5]
resource_name = "intro"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1351.26, 220.294 ), Vector2( 849.12, 235.396 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.2, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 0 ]
}
tracks/2/type = "audio"
tracks/2/path = NodePath("AudioStreamPlayer")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 6 )
} ],
"times": PoolRealArray( 1.2 )
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "shake"
} ]
}

[sub_resource type="CircleShape2D" id=6]
radius = 159.752

[node name="bossfight" type="Node2D"]
script = ExtResource( 8 )

[node name="dragon" type="AnimatedSprite" parent="." groups=[
"pause",
]]
material = SubResource( 1 )
position = Vector2( 1100.19, 227.845 )
rotation = -0.872665
frames = SubResource( 4 )
script = ExtResource( 2 )
fireball_scene = ExtResource( 3 )

[node name="shoot_timer" type="Timer" parent="dragon"]
wait_time = 0.2

[node name="pos" type="Position2D" parent="dragon"]
position = Vector2( -99.5238, -35.8584 )

[node name="animation" type="AnimationPlayer" parent="dragon"]
playback_speed = 0.5
anims/fire = ExtResource( 4 )
anims/idle = ExtResource( 5 )
anims/intro = SubResource( 5 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="dragon"]
stream = ExtResource( 6 )

[node name="idle_timer" type="Timer" parent="dragon"]
wait_time = 2.0
one_shot = true

[node name="eye" type="Area2D" parent="dragon" groups=[
"eye",
]]
position = Vector2( -121.493, 7.96222 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="dragon/eye"]
shape = SubResource( 6 )

[node name="music" type="AudioStreamPlayer" parent="dragon"]
stream = ExtResource( 7 )
volume_db = -13.126

[node name="tuteye" parent="dragon" instance=ExtResource( 10 )]
position = Vector2( -78.9719, -71.7764 )

[node name="Position2D" type="Position2D" parent="."]
position = Vector2( 748.864, 268.019 )

[node name="bowlersound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 9 )
volume_db = -8.078

[node name="kill_tween" type="Tween" parent="."]
[connection signal="timeout" from="dragon/shoot_timer" to="dragon" method="_on_shoot_timer_timeout"]
[connection signal="animation_finished" from="dragon/animation" to="dragon" method="_on_animation_animation_finished"]
[connection signal="timeout" from="dragon/idle_timer" to="dragon" method="_on_idle_timer_timeout"]
